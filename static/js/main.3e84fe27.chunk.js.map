{"version":3,"sources":["Components/Form/Form.js","Components/ListItem/ListItem.js","Components/ListItem/ListItemPreview.js","Components/List/List.js","Components/Map/MapPoint.js","Components/Map/Map.js","Components/Map/MapWrapper.js","Components/ToggleButton/ToggleButton.js","App.js","serviceWorker.js","index.js"],"names":["CreateItemForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","itemName","touched","handleNameChange","bind","assertThisInitialized","onSubmit","error","validate","react_default","a","createElement","value","type","onChange","className","autoComplete","placeholder","e","preventDefault","setTouched","resetForm","target","setState","isTouched","update","$set","Component","itemSource","beginDrag","monitor","component","offsetWidth","findDOMNode","id","item","index","name","width","itemTarget","hover","dragIndex","getItem","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveItem","ListItem","handleRemove","_this$props","isDragging","connectDragSource","connectDropTarget","opacity","style","onClick","react_icons_kit_default","icon","ic_close","removeItem","DropTarget","connect","dropTarget","DragSource","dragSource","ListItemPreview","List","_Component","apply","arguments","inherits","createClass","key","items","map","i","Components_ListItem_ListItem","react_dnd_multi_backend_lib","generator","generatePreview","assign","concat","ListItem_ListItemPreview","DragDropContext","MultiBackend","HTML5toTouch","MapPoint","mapProvider","point","marker","maps","Marker","position","LatLng","coord","lat","lng","title","draggable","eventName","handler","addListener","getPosition","setMap","Map","route","infowindow","mapPoints","handleMapChange","handlePointInfo","handlePointMove","handlePointHasMoved","prevProps","google","initMap","initRoute","initInfowindow","points","updateRoute","ref","warning","refs","zoom","center","mapTypeControl","streetViewControl","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","InfoWindow","transformCoordinates","getCenter","prevPoints","newPoints","_this2","forEach","find","newPoint","deletePoint","findIndex","prevPoint","addPoint","mapPoint","prevIndex","nextIndex","reorderPoint","setEventHandler","splice","getPath","insertAt","removeAt","path","getAt","setContent","open","setAt","getPointIndexById","googleLatLng","url","makeAsyncScriptLoader","globalName","ToggleButton","handleClick","ic_keyboard_arrow_right","size","mql","window","matchMedia","App","scriptError","currentCoord","currentId","sidebarOpen","sidebarDocked","matches","toggleSidebar","handleMediaQueryChanged","removePoint","reorderPoints","updateCurrentCoord","movePoint","callAfterScriptLoads","sidebar","Form_Form","Components_List_List","mainContent","MapWrapper","asyncScriptOnLoad","Components_ToggleButton_ToggleButton","react_sidebar_esm","docked","sidebarClassName","onSetOpen","children","resp","errored","$push","$splice","defineProperty","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e84fe27.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css';\nimport update from 'immutability-helper';\n\nclass CreateItemForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemName: '',\n      touched: false\n    };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    // this.handleBlur = this.handleBlur.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    const error = this.validate();\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input value={this.state.itemName}\n               type=\"text\"\n               onChange={this.handleNameChange}\n               className={\"form__field \" + (error && this.state.touched ? 'form__field--error' : '')}\n               autoComplete=\"off\"\n               placeholder={'Новая точка маршрута'}/>\n      </form>\n    )\n  }\n\n  validate() {\n    return this.state.itemName === '';\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.validate()) {\n      this.setTouched(true);\n    } else {\n      this.props.onSubmit(this.state.itemName );\n      this.resetForm();\n    }\n  }\n\n  handleNameChange(e) {\n    const itemName = e.target.value;\n    this.setState(() => ({ itemName }));\n  };\n\n  // handleBlur() {\n  //   this.setTouched(true);\n  // };\n\n  setTouched(isTouched) {\n    this.setState(update(this.state, {\n      touched: {\n        $set: isTouched\n      }\n    }));\n  }\n\n  resetForm() {\n    this.setState(update(this.state, {\n      itemName: {\n        $set: ''\n      },\n      touched: {\n        $set: false\n      }\n    }));\n  }\n}\n\nexport default CreateItemForm;","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom'\nimport { DragSource, DropTarget } from 'react-dnd';\nimport './ListItem.css';\nimport Icon from 'react-icons-kit';\nimport {ic_close} from 'react-icons-kit/md/ic_close';\n\nconst itemSource = {\n  beginDrag(props, monitor, component) {\n\n    const offsetWidth = (findDOMNode(component)).offsetWidth;\n\n    return {\n      id: props.item.id,\n      index: props.index,\n      name: props.item.name,\n      width: offsetWidth\n    }\n  },\n};\n\nconst itemTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return\n    }\n\n    // Determine rectangle on screen\n    const hoverBoundingRect = (findDOMNode(component)).getBoundingClientRect();\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return\n    }\n\n    // Time to actually perform the action\n    props.moveItem(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex\n  }\n};\n\nclass ListItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  render() {\n    const {\n      item,\n      isDragging,\n      connectDragSource,\n      connectDropTarget,\n    } = this.props;\n    const opacity = isDragging ? 0 : 1;\n    return (\n      connectDragSource &&\n      connectDropTarget &&\n      connectDragSource(\n        connectDropTarget(\n          <li className=\"list-item\" style={{opacity}}>\n            <div className=\"list-item__content\">{item.name}</div>\n            <button className=\"list-item__delete-button\" onClick={this.handleRemove}>\n              <Icon icon={ic_close}/>\n            </button>\n          </li>)\n      )\n    );\n  }\n\n  handleRemove() {\n    this.props.removeItem(this.props.index);\n  }\n}\n\nexport default DropTarget('listItem', itemTarget, (connect) => ({\n  connectDropTarget: connect.dropTarget(),\n}))(DragSource('listItem', itemSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n}))(ListItem));","import React, {Component} from 'react';\nimport Icon from 'react-icons-kit';\nimport {ic_close} from 'react-icons-kit/md/ic_close';\n\nclass ListItemPreview extends Component {\n\n  render() {\n    return (\n      <div className=\"list-item\" style={this.props.style}>\n        <div className=\"list-item__content\">{this.props.name}</div>\n        <button className=\"list-item__delete-button\">\n          <Icon icon={ic_close}/>\n        </button>\n      </div>)\n  }\n}\n\nexport default ListItemPreview;","import React, { Component } from 'react';\nimport './List.css';\nimport { DragDropContext } from 'react-dnd';\nimport MultiBackend, { Preview } from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch';\nimport ListItem from '../ListItem/ListItem';\nimport ListItemPreview from '../ListItem/ListItemPreview'\n\nexport class List extends Component {\n\n  render() {\n    return (\n      <div className=\"list\">\n        <ul className=\"list__list\">\n          {this.props.items.map((item, i) => {\n            return (<ListItem key={item.id}\n                              index={i}\n                              item={item}\n                              moveItem={this.props.moveItem}\n                              removeItem={this.props.removeItem}\n            />)\n          })}\n        </ul>\n        <Preview generator={this.generatePreview} />\n      </div>\n    );\n  }\n\n  generatePreview(type, item, style) {\n    Object.assign(style, {width: `${item.width}px`});\n    return (<ListItemPreview name={item.name} style={style} />);\n  }\n}\n\nexport default DragDropContext(MultiBackend(HTML5toTouch))(List);","export default class MapPoint {\n  constructor(mapProvider, point) {\n    this.id = point.id;\n    this.marker = new mapProvider.maps.Marker({\n      position: new mapProvider.maps.LatLng(point.coord.lat, point.coord.lng),\n      title: point.name,\n      draggable: true\n    });\n  }\n\n  setEventHandler(eventName, handler) {\n    this.marker.addListener(eventName, () => {\n      handler(this);\n    });\n  }\n\n  getPosition() {\n    return this.marker.getPosition();\n  }\n\n  setMap(map) {\n    this.marker.setMap(map);\n  }\n}","import React, { Component } from 'react';\nimport MapPoint from './MapPoint';\nimport './Map.css';\n\nclass Map extends Component {\n\n  constructor(props) {\n    super(props);\n    this.map = null;\n    this.route = null;\n    this.infowindow = null;\n    this.mapPoints = [];\n    this.handleMapChange = this.handleMapChange.bind(this);\n    this.handlePointInfo = this.handlePointInfo.bind(this);\n    this.handlePointMove = this.handlePointMove.bind(this);\n    this.handlePointHasMoved = this.handlePointHasMoved.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { google } = this.props;\n    if (!prevProps.google && google) {\n      this.initMap();\n      this.initRoute();\n      this.initInfowindow();\n      this.map.addListener('center_changed', this.handleMapChange);\n    }\n    if (prevProps.points !== this.props.points) {\n      this.updateRoute(prevProps.points, this.props.points)\n    }\n  }\n\n  render() {\n    return (\n      <div ref=\"map\" className=\"map\">\n        {this.props.warning ? (<div className=\"map__warning\"><span>Что-то пошло не так. Не удается загрузить карту.</span></div>) : ''}\n      </div>\n    );\n  }\n\n  initMap() {\n    const { google } = this.props;\n    this.map = new google.maps.Map(this.refs.map, {\n      zoom: 12,\n      center: new google.maps.LatLng(this.props.center.lat, this.props.center.lng),\n      mapTypeControl: false,\n      streetViewControl: false\n    });\n  }\n\n  initRoute() {\n    this.route = new this.props.google.maps.Polyline({\n      geodesic: false,\n      strokeColor: '#FF0000',\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    this.route.setMap(this.map);\n  }\n\n  initInfowindow() {\n    this.infowindow = new this.props.google.maps.InfoWindow({});\n  }\n\n  handleMapChange() {\n    this.props.handleMapChange(this.transformCoordinates(this.map.getCenter()));\n  }\n\n  updateRoute(prevPoints, newPoints) {\n\n    // remove outdated points\n    prevPoints.forEach((point) => {\n      if (!newPoints.find((newPoint) => newPoint.id === point.id)) {\n        this.deletePoint(point.id);\n      }\n    });\n\n    // add new points\n    newPoints.forEach((point, index) => {\n      const prevIndex = prevPoints.findIndex((prevPoint) => prevPoint.id === point.id);\n      if (prevIndex < 0) {\n        this.addPoint(point, index);\n      }\n    });\n\n    // reorder points\n    this.mapPoints.forEach((mapPoint, index) => {\n      const id = mapPoint.id;\n      if (id !== this.props.points[index].id) {\n        const prevIndex = this.mapPoints.findIndex((point) => id === point.id);\n        const nextIndex = this.props.points.findIndex((point) => id === point.id);\n        this.reorderPoint(prevIndex, nextIndex);\n      }\n    });\n  }\n\n  addPoint(point, index) {\n    const mapPoint = new MapPoint(this.props.google, point);\n\n    mapPoint.setEventHandler('click', this.handlePointInfo);\n    mapPoint.setEventHandler('drag', this.handlePointMove);\n    mapPoint.setEventHandler('dragend', this.handlePointHasMoved);\n\n    mapPoint.setMap(this.map);\n    this.mapPoints.splice(index, 0, mapPoint);\n    this.route.getPath().insertAt(index, mapPoint.getPosition());\n  }\n\n  deletePoint(id) {\n    const index = this.mapPoints.findIndex(mapPoint => mapPoint.id === id);\n    this.mapPoints[index].setMap(null);\n    this.mapPoints.splice(index, 1);\n    this.route.getPath().removeAt(index);\n  }\n\n  reorderPoint(prevIndex, nextIndex) {\n    this.mapPoints.splice(nextIndex, 0, this.mapPoints.splice(prevIndex, 1)[0]);\n    const path = this.route.getPath();\n    const point = path.getAt(prevIndex);\n    path.removeAt(prevIndex);\n    path.insertAt(nextIndex, point);\n  }\n\n  handlePointInfo(mapPoint) {\n    const marker = mapPoint.marker;\n    this.infowindow.setContent(`<div class=\"map__infowindow\">${marker.title}</div>`);\n    this.infowindow.open(this.map, marker);\n  }\n\n  handlePointMove(mapPoint) {\n    this.route.getPath().setAt(this.getPointIndexById(mapPoint.id), mapPoint.getPosition());\n  }\n\n  handlePointHasMoved(mapPoint) {\n    this.props.handlePointMove(this.getPointIndexById(mapPoint.id), this.transformCoordinates(mapPoint.getPosition()));\n  }\n\n  getPointIndexById(id) {\n    return this.mapPoints.findIndex(point => point.id === id);\n  }\n\n  transformCoordinates(googleLatLng) {\n    return {lat: googleLatLng.lat(), lng: googleLatLng.lng()}\n  }\n}\n\nexport default Map;","import makeAsyncScriptLoader from 'react-async-script';\nimport Map from './Map';\n\nconst key = 'AIzaSyCQfJgnHnO6LlY_DxE-VaYEB_qWV-W9O7c';\nconst url = `https://maps.googleapis.com/maps/api/js?key=${key}`;\nconst globalName = 'google';\n\nexport default makeAsyncScriptLoader(url, {\n  globalName: globalName\n})(Map);","import React, { Component } from 'react';\nimport './ToggleButton.css';\nimport Icon from 'react-icons-kit';\nimport {ic_keyboard_arrow_right} from 'react-icons-kit/md/ic_keyboard_arrow_right';\n\nclass ToggleButton extends Component {\n\n  render() {\n    return (\n      <button className=\"toggle-button\" onClick={this.props.handleClick}>\n        <Icon icon={ic_keyboard_arrow_right} size=\"24\"/>\n      </button>\n    );\n  }\n}\n\nexport default ToggleButton;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Components/Form/Form';\nimport List from './Components/List/List';\nimport MapWrapper from './Components/Map/MapWrapper';\nimport Sidebar from 'react-sidebar';\nimport ToggleButton from './Components/ToggleButton/ToggleButton';\nimport update from 'immutability-helper';\n\nconst mql = window.matchMedia('(min-width: 768px)');\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      scriptError: false,\n      points: [],\n      currentCoord: {lat: 55.7526443, lng: 37.62370929999997},\n      currentId: 0,\n      sidebarOpen: true,\n      sidebarDocked: mql.matches\n    };\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.handleMediaQueryChanged = this.handleMediaQueryChanged.bind(this);\n    this.addPoint = this.addPoint.bind(this);\n    this.removePoint = this.removePoint.bind(this);\n    this.reorderPoints = this.reorderPoints.bind(this);\n    this.updateCurrentCoord = this.updateCurrentCoord.bind(this);\n    this.movePoint = this.movePoint.bind(this);\n    this.callAfterScriptLoads = this.callAfterScriptLoads.bind(this);\n  }\n\n  componentWillMount() {\n    mql.addListener(this.handleMediaQueryChanged);\n  }\n\n  render() {\n    const sidebar =\n      <div>\n        <div className=\"app__sidebar-top\">\n          <Form onSubmit={this.addPoint}/>\n        </div>\n        <List items={this.state.points}\n              moveItem={this.reorderPoints}\n              removeItem={this.removePoint}/>\n      </div>;\n\n    const mainContent =\n      <div>\n        <MapWrapper warning={this.state.scriptError}\n                    center={this.state.currentCoord}\n                    points={this.state.points}\n                    handleMapChange={this.updateCurrentCoord}\n                    handlePointMove={this.movePoint}\n                    asyncScriptOnLoad={this.callAfterScriptLoads}\n        />\n        {!this.state.sidebarDocked ? (<ToggleButton handleClick={this.toggleSidebar} />) : ''}\n      </div>;\n\n    return (\n      <div className=\"App\">\n        <Sidebar\n          open={this.state.sidebarOpen}\n          docked={this.state.sidebarDocked}\n          sidebarClassName=\"app__sidebar\"\n          onSetOpen={this.toggleSidebar}\n          sidebar={sidebar}\n          children={mainContent}\n        >\n        </Sidebar>\n      </div>\n    );\n  }\n\n  callAfterScriptLoads(resp) {\n    this.setState(\n      update(this.state, {\n        scriptError: {\n          $set: resp.errored\n        }\n      })\n    )\n  }\n\n  toggleSidebar() {\n    this.setState(\n      update(this.state, {\n        sidebarOpen: {\n          $set: !this.state.sidebarOpen\n        }\n      })\n    )\n  }\n\n  handleMediaQueryChanged() {\n    this.setState(update(this.state, {\n      sidebarDocked: {\n        $set: mql.matches\n      },\n      sidebarOpen: {\n        $set: false\n      }\n    }));\n  }\n\n  updateCurrentCoord(coord) {\n    this.setState(\n      update(this.state, {\n        currentCoord: {\n          $set: coord\n        }\n      })\n    )\n  }\n\n  addPoint(name) {\n    this.setState(update(this.state, {\n      points: {\n        $push: [{id: this.state.currentId, name: name, coord: this.state.currentCoord}]\n      },\n      currentId: {\n        $set: this.state.currentId + 1\n      }\n    }));\n  }\n\n  removePoint(index) {\n    this.setState(\n      update(this.state, {\n        points: {\n          $splice: [[index, 1]]\n        }\n      })\n    )\n  }\n\n  reorderPoints(dragIndex, hoverIndex) {\n    this.setState(\n      update(this.state, {\n        points: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, this.state.points[dragIndex]]]\n        }\n      })\n    )\n  }\n\n  movePoint(index, coord) {\n    this.setState(\n      update(this.state, {\n        points: {\n          [index]: {\n            coord: {\n              $set: coord\n            }\n          }\n        }\n      })\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}